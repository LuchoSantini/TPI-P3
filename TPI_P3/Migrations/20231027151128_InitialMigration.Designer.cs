// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPI_P3.Data;

#nullable disable

namespace TPI_P3.Migrations
{
    [DbContext(typeof(TPIContext))]
    [Migration("20231027151128_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("TPI_P3.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VariantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VariantId");

                    b.ToTable("ProductTable", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Zapatilla Nike",
                            Price = 1700.0,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Zapatilla Adidas",
                            Price = 1600.0,
                            Status = true
                        });
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("UserType");
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Colour")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colour = "AZUL",
                            ProductId = 0,
                            Size = "L",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Colour = "rojo",
                            ProductId = 0,
                            Size = "L",
                            Status = false
                        });
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.Product", b =>
                {
                    b.HasOne("TPI_P3.Data.Entities.Variant", null)
                        .WithMany("Products")
                        .HasForeignKey("VariantId");
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.Variant", b =>
                {
                    b.HasOne("TPI_P3.Data.Entities.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("TPI_P3.Data.Entities.Variant", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
